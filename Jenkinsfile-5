pipeline {
    agent {
        dockerfile { args '--privileged --network=host'}
    }
    stages {
        stage('Azure Login & ContainerImage Push ACR') {
            environment {
                    dockerTool = tool 'docker'
                    dockerHub = credentials('BrankoDockerHub')
                    azureUs = credentials('BrankoAzureLogin')
                }
            steps {
                script {
                    sh "${dockerTool}/bin/docker login -u $dockerHub_USR -p $dockerHub_PSW"
                    sh "${dockerTool}/bin/docker build -t aggasth/mongo-store:1.3 ."
                    sh "${dockerTool}/bin/docker push aggasth/mongo-store:1.3"
                    sh "${dockerTool}/bin/docker tag aggasth/mongo-store:1.3 bosorio.azurecr.io/mongo-store:1.3"
                    withCredentials(bindings: [azureServicePrincipal('devServicePrincipal')]) {
                        sh 'az login --service-principal -u $azureUs_USR -p $azureUs_PSW -t $AZURE_TENANT_ID'
                        sh 'az acr login --expose-token -n bosorio'
                        sh '${dockerTool}/bin/docker push bosorio.azurecr.io/mongo-store:1.3'
                        sh '${dockerTool}/bin/docker logout'
                        echo '|-------- Image Push Realizado Correctamente --------|' 
                        sh 'az webapp config container set --name $APP_NAME --resource-group $RES_GRP --docker-custom-image-name bosorio.azurecr.io/mongo-store:1.3 --docker-registry-server-url https://bosorio.azurecr.io --docker-registry-server-user $azureUs_USR --docker-registry-server-password $azureUs_PSW'
                    }
                }
            }
        }
    }
    parameters {
        string(name:'PLAN',defaultValue:'Plan-SociusRGLABRGModeloDevOpsDockerDev',description:'Plan del servicio')
        string(name:'APP_NAME',defaultValue:'sociuswebapptest010',description:'Nombre de la webapp')
        string(name:'RES_GRP',defaultValue:'SOCIUSRGLAB-RG-MODELODEVOPS-DEV',description:'Grupo de recursos')
    }
}
