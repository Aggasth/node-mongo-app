pipeline {
    agent {
        dockerfile { args '--privileged --network=host'}
    }
    stages {
        stage('Azure Login') {
            steps {
                //La construcción y push de la imagen de docker la hice localmente
                //El push de la imagen de docker hub a azure cr también localmente
                script {
                    withCredentials(bindings: [azureServicePrincipal('devServicePrincipal')]) {
                        sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
                        sh 'az webapp create -p $PLAN -n $APP_NAME -g $RES_GRP -i bosorio.azurecr.io/mongo-store'
                    }
                }
            }
        }
    }
    parameters {
        string(name:'PLAN',defaultValue:'Plan-SociusRGLABRGModeloDevOpsDockerDev',description:'Plan del servicio')
        string(name:'APP_NAME',defaultValue:'sociuswebapptest012',description:'Nombre de la webapp')
        string(name:'RES_GRP',defaultValue:'SOCIUSRGLAB-RG-MODELODEVOPS-DEV',description:'Grupo de recursos')
    }
}