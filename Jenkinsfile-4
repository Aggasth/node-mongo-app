pipeline {
  agent {
    docker { image 'ubuntu:latest' }
  }
    stages {
        stage('Load Config') {
            steps {
                script {
                    def config = readJSON file: 'config.json'
                    env.AZURE_CLIENT_ID = config.AZURE_CLIENT_ID
                    env.AZURE_CLIENT_SECRET = config.AZURE_CLIENT_SECRET
                    env.AZURE_TENANT_ID = config.AZURE_TENANT_ID
                    env.WEBAPP_NAME = config.WEBAPP_NAME
                    env.RESOURCE_GROUP_NAME = config.RESOURCE_GROUP_NAME
                }
            }
        }

        stage('Install Azure') {
            steps {
                script {
                    sh 'curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash'
                }
            }
        }
        
        stage('Azure Login') {
            steps {
                script {
                    withAzureCredentials(env.AZURE_CLIENT_ID, env.AZURE_CLIENT_SECRET, env.AZURE_TENANT_ID, 'Azure') {
                        sh 'az login -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID'
                    }
                }
            }
        }

        stage('Deploy to Azure') {
            steps {
                script {
                    sh "az webapp restart --name $WEBAPP_NAME --resource-group $RESOURCE_GROUP_NAME"
                }
            }
        }
    }
}